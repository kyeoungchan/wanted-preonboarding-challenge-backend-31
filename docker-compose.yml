version: '3'
services:
  postgres-db:
    image: postgres:17
    container_name: challenge-postgres
    environment:
      POSTGRES_USER: challenge_user
      POSTGRES_PASSWORD: challenge1234
      POSTGRES_DB: challenge
    ports:
      - "5432:5432"
    volumes:
      - challenge_db_data:/var/lib/postgresql/data
    # Debezium CDC를 위한 설정 추가
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "max_replication_slots=10"

  # Zookeeper - Kafka 클러스터 관리
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka - 메시지 브로커
  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # 필요한 토픽들 자동 생성 설정
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  # Kafka UI - 카프카 모니터링 및 관리용 웹 인터페이스
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8989:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # Debezium Connect - CDC 이벤트 발행을 위한 Kafka Connect
  debezium-connect:
    image: debezium/connect:2.7.3.Final
    container_name: debezium-connect
    depends_on:
      - kafka
      - postgres-db
    ports:
      - "8083:8083"
    volumes:
      - ./debezium-libs:/kafka/connect/debezium-libs
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      BOOTSTRAP_SERVERS: kafka:9092
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      ENABLE_DEBEZIUM_SCRIPTING: "true"
      CONNECT_METRICS_ENABLED: "false"
      KAFKA_OPTS: "-Dcom.sun.management.jmxremote=false"

  # MongoDB - 쿼리 모델을 위한 NoSQL 데이터베이스
  mongodb:
    image: mongo:8.0
    container_name: challenge-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    volumes:
      - mongodb_data:/data/db

  # Elasticsearch - 검색 최적화된 쿼리 모델용
  elasticsearch:
    image: elasticsearch:8.17.5
    container_name: challenge-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    # elasticsearch에 nori 분석기 plugin 포함
    command: >
      bash -c '
        bin/elasticsearch-plugin install analysis-nori || true;
        /usr/local/bin/docker-entrypoint.sh elasticsearch
      '

  # Kibana - Elasticsearch 관리 및 모니터링용
  kibana:
    image: kibana:8.17.5
    container_name: challenge-kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  # Valkey (Redis 호환) - 캐싱 및 임시 데이터 저장용
  valkey:
    image: valkey/valkey:7.2.9
    container_name: challenge-valkey
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data

volumes:
  challenge_db_data:
  kafka_data:
  mongodb_data:
  elasticsearch_data:
  valkey_data: